version: '3.8'

services:
  lab02zad1:
    image: lab02zad1
    build:
      context: lab02/zad1
      dockerfile: ./Dockerfile
    environment:
      NODE_ENV: production
    ports:
      - 8080:8080
  lab02zad2:
    image: lab02zad2
    build:
      context: lab02/zad2
      dockerfile: ./Dockerfile
    environment:
      NODE_ENV: production
    ports:
      - 8080:8080
  lab02zad3:
    build:
      context: lab02/zad3
      dockerfile: ./Dockerfile
    environment:
      NODE_ENV: production
    ports:
      - 8080:8080
  mongo:
    image: mongo
    ports:
      - 27017:27017
    volumes:
      - mongodb:/data/db
  lab03zad1:
    build:
      context: lab03/zad1
      dockerfile: ./Dockerfile
    ports:
      - 80:80
    volumes:
      - ./lab03/zad1/index.html:/usr/share/nginx/html/index.html
  lab03zad2:
    build:
      context: lab03/zad2
      dockerfile: ./Dockerfile
    ports:
      - 80:81
  lab03zad3-nginx:
    build:
      context: lab03/zad3/nginx
      dockerfile: ./Dockerfile
    ports:
      - 80:80
  lab03zad3-app:
    container_name: app
    build:
      context: lab03/zad3/app
      dockerfile: ./Dockerfile
    ports:
      - 3000:3000 
  lab04zad1:
    build:
      context: lab04/zad1
      dockerfile: ./Dockerfile
    volumes:
      - nginx_data:/usr/share/nginx/html
  lab04zad2:
    build:
      context: lab04/zad2
      dockerfile: ./Dockerfile
    volumes:
      - node_data:/app
  lab05zad1:
    build:
      context: lab05/zad1
      dockerfile: ./Dockerfile
  lab05zad2:
    build:
      context: lab05/zad2
      dockerfile: ./Dockerfile
    environment:
      NODE_ENV: production
  lab05zad3:
    build:
      context: lab05/zad3
      dockerfile: ./Dockerfile
      args:
        PYTHON_VERSION: 3.11
  lab05zad4:
    build:
      context: lab05/zad4
      dockerfile: ./Dockerfile
      args:
        PYTHON_VERSION: 3.10.10-r0
    environment:
      APP_PORT: 8080
      PYTHON_VERSION: 3.10.10-r0
    ports:
      - 8080:8080
    volumes:
      - python_data:/usr/myapp
  lab05zad5:
    build:
      context: lab05/zad5
      dockerfile: ./Dockerfile
    ports:
      - 81:81
  lab06zad2-web:
    container_name: web
    build:
      context: lab06/zad2/nginx
      dockerfile: ./Dockerfile
    networks:
      - my_network
    ports:
      - 80:80
  lab06zad2-db:
    container_name: db
    build:
      context: lab06/zad2/pssql
      dockerfile: ./Dockerfile
    environment:
      - POSTGRES_HOST_AUTH_METHOD=trust
    networks:
      - my_network
    ports:
      - 5432:5432
networks:
  frontend-network:
    driver: bridge
    driver_opts:
      parent: eth0
    ipam:
      config:
        - subnet: 192.168.1.0/24
  backend-network:
    driver: bridge
    driver_opts:
      parent: eth0
    ipam:
      config:
        - subnet: 192.168.2.0/24
  my_network:
    driver: bridge
    driver_opts:
      parent: eth0
    ipam:
      config:
         - subnet: 192.168.0.0/24 
volumes:
  nginx_data:
  node_data:
  python_data:
  mongodb:
